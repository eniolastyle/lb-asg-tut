name: Deploy Terraform ALB-ASG Infra

on:
  push:
    branches:
      - feature-a

  pull_request:
    types: [closed]
    branches:
      - main
      - feature-b

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.9
      - name: Format Terraform code
        run: terraform fmt -check -diff -recursive
        working-directory: ./infra

  plan:
    needs: lint
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/feature-a'
    steps:
      - name: Code Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform init
        run: terraform init
        working-directory: ./infra
      - name: Terraform plan
        working-directory: ./infra
        run: |
          terraform plan \
          -out=tf.plan

  apply:
    needs: lint
    runs-on: ubuntu-latest
    if: |
      github.ref == 'main' &&
      github.event.pull_request.merged == true
    steps:
      - name: Code Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform init
        run: terraform init
        working-directory: ./infra
      - name: Terraform Apply
        working-directory: ./infra
        run: |
          terraform apply \
          -auto-approve \

  destroy:
    runs-on: ubuntu-latest
    if: |
      github.ref == 'feature-b' &&
      github.event.pull_request.merged == true
    steps:
      - name: Code Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform init
        run: terraform init
        working-directory: ./infra
      - name: Terraform plan
        working-directory: ./infra
        run: |
          terraform plan \
          -out=tf.plan
      - name: Terraform Destroy
        working-directory: ./infra
        run: terraform destroy -auto-approve
